<%#
  Full post view, containing all details and interactions.
  Variables:
    post : the Post instance to display
    float_notice : whether to display the float notice
%>

<% float_notice ||= false %>
<% category ||= defined?(@category) && @category.id == post.category_id ? @category : post.category %>
<% post_type ||= defined?(@post_type) && @post_type.id == post.post_type_id ? @post_type : post.post_type %>

<% is_question = post.post_type_id == Question.post_type_id %>
<% is_top_level = post.parent_id.nil? %>

<div class="post <%= post.meta? ? 'is-meta' : '' %> <%= is_top_level ? '' : 'has-border-bottom-style-solid has-border-bottom-width-1 has-border-color-tertiary-100' %>" data-post-id="<%= post.id %>" id="<%= (is_question ? 'question-' : 'answer-') + post.id.to_s %>" data-ckb-list-item data-ckb-item-type="post" data-ckb-post-id="<%= post.id %>">
  <% if is_top_level %>
    <h1 class="post--title has-border-top-width-4 has-border-top-style-solid has-border-color-<%= post.meta? ? 'tertiary' : 'primary' %>-400 has-padding-2">
      <% title = post.title +
                 (post.closed && !post.duplicate_post ? " [closed]" : "") +
                 (post.duplicate_post ? " [duplicate]" : "") %>
      <span class="post--title-text"><%= title %></span>
      <% if category.display_post_types.reject { |e| e.to_s.empty? }.size > 1 %>
        <%= post_type_badge(post_type) %>
      <% end %>
    </h1>
  <% end %>

  <% if float_notice %>
    <% sort_type = params[:sort] == 'active' ? 'activity' : 'score' %>
    <div class="notice is-info has-font-size-caption">
      <p>
        You are accessing this answer with a direct link, so it's being shown above all other answers regardless of its <%= sort_type %>.
        You can <strong><%= link_to 'return to the normal view', generic_share_link(post.parent), class: 'is-teal' %></strong>.
      </p>
    </div>
  <% end %>

  <div class="post--container <%= 'deleted-content' if post.deleted? %> grid is-nowrap">
    <% if post_type.has_votes || (user_signed_in? && post.post_type.has_reactions && post.post_type.reactions.any?) %>
      <div>
        <% if post_type.has_votes %>
          <div class="post--votes has-text-align-center" title="Score : <%= post.score %>">
            <% existing_vote = my_vote(post) %>
            <% unless post.locked? %>
              <button class="vote-button button is-icon-only-button <%= (existing_vote&.vote_type == 1) ? 'is-active' : '' %>"
                      data-vote-type="1" data-vote-id="<%= existing_vote&.id %>" id="post-<%= post.id %>-up" aria-label="Upvote">
                  <svg width="2em" height="1.33em" viewbox="0 0 100 50">
                    <path d="M50,0 L100,50 L0,50 Z" fill="currentColor" />
                  </svg>
              </button>
            <% end %>
            <div class="score has-font-size-subheading js-upvote-count">
              +<%= post.upvote_count %>
            </div>
            <div class="score has-font-size-subheading js-downvote-count">
              &minus;<%= post.downvote_count %>
            </div>
            <% unless post.locked? %>
              <button class="vote-button button is-icon-only-button <%= (existing_vote&.vote_type == -1) ? 'is-active' : '' %>"
                      data-vote-type="-1" data-vote-id="<%= existing_vote&.id %>" id="post-<%= post.id %>-up" aria-label="Downvote">
                  <svg width="2em" height="1.33em" viewbox="0 0 100 50">
                    <path d="M0,0 L100,0 L50,50 Z" fill="currentColor" />
                  </svg>
              </button>
            <% end %>
          </div>
        <% end %>
        <% if user_signed_in? && post.post_type.has_reactions && post.post_type.reactions.any? %>
          <div class="post--react has-text-align-center">
            <% unless post.locked? %>
              <button class="react-button button is-muted is-icon-only-button h-fw-bold"
                      id="post-<%= post.id %>-react" aria-label="Add Reaction"
                      data-drop="#post-<%= post.id %>-reactions-panel"
                      data-drop-self-class-toggle="is-active"
                      data-drop-force-dir="down">
                  react
              </button>
            <% end %>
          </div>
        <% end %>
      </div>
    <% end %>

    <div class="post--content has-padding-2">
      <%= render('reactions/list', post: post) if post.reactions %>

      <% if post_type.is_closeable && post.closed %>
        <div class="notice has-margin-2">
          <p class="has-font-weight-normal">
            <strong>Closed</strong>
            <% unless post.close_reason.nil? %>
              as <%= post.close_reason.name %>
            <% end %>
            by <%= user_link post.closed_by %>
            on <%= post.closed_at.strftime('%b %e, %Y at %H:%M') %>
          <% unless post.close_reason.nil? %>
            <p>
              <%= post.close_reason.description.gsub "$SiteName", SiteSetting['SiteName'] %>
              <% if post.close_reason.requires_other_post %>
                See: <%= link_to post.duplicate_post.title, post_path(post.duplicate_post), class: "has-font-size-larger" %>
              <% end %>
            </p>
          <% end %>
          <p>
            This question was closed; new answers can no longer be added.
            Users with the reopen privilege may vote to reopen this question if it has been improved or closed incorrectly.
          </p>
        </div>
      <% end %>

      <% if post.deleted %>
        <div class="notice has-margin-2">
          <p class="has-font-weight-normal">
            <strong>Deleted</strong> by <%= user_link post.deleted_by %>
            on <%= post.deleted_at.strftime('%b %e, %Y at %H:%M') %>
          </p>
          <hr>
          <% if post.deleted_by.id == post.user_id %>
            <p>
              The author of this post decided to delete it. It can only be seen by users with the Curate privilege.
            </p>
          <% else %>
            <p>
              This post was deleted and can only be seen by users with the Curate privilege.
            </p>
          <% end %>

          <p>Users with the Curate privilege may vote to restore this post if it has been deleted incorrectly.</p>
        </div>
      <% end %>

      <% if post.locked? %>
        <div class="notice has-margin-2">
          <p>
            <strong>Locked</strong> by <%= link_to post.locked_by.username, user_path(post.locked_by) %>
            on <%= post.locked_at.strftime('%b %e, %Y at %H:%M') %>.
          </p>
        </div>
      <% end %>

      <% if post_type.is_public_editable && post.pending_suggested_edit? %>
        <% if check_your_post_privilege(post, 'edit_posts') %>
          <div class="notice h-p-2">
            <p class="h-m-0">
              <i class="fa fa-pencil-alt h-m-l-2 h-c-red-600"></i>
              There is a <strong>pending suggested edit</strong> on this post.
              <a href="<%= suggested_edit_url(post.pending_suggested_edit.id) %>" class="button is-outlined is-muted is-small" role="button" aria-label="Review changes of suggested edit">Review changes</a></p>
          </div>
        <% elsif post.pending_suggested_edit.user.id == current_user&.id %>
          <div class="notice h-p-2">
            <p class="h-m-0">
              <i class="fa fa-pencil-alt h-m-l-2 h-c-tertiary-600"></i>
              Your suggested edit on this post is <strong>
              <%= link_to 'pending review', suggested_edit_url(post.pending_suggested_edit.id) %></strong>.</p>
          </div>
        <% end %>
      <% end %>

      <div class="post--body">
        <%= raw(sanitize(post.body, scrubber: scrubber)) %>

        <% been_edited = post.last_edited_by_id != nil %>
        <% if been_edited then last_edited_by_self = post.user_id == post.last_edited_by_id end %>

        <% if post_type.has_tags %>
          <div class="post--tags has-padding-2">
            <% required_ids = post.category&.required_tag_ids %>
            <% moderator_ids = post.category&.moderator_tag_ids %>
            <% topic_ids = post.category&.topic_tag_ids %>
            <% category_sort_tags(post.tags, required_ids, topic_ids, moderator_ids).each do |tag| %>
              <% required = required_ids&.include?(tag.id) ? 'is-filled' : '' %>
              <% topic = topic_ids&.include?(tag.id) ? 'is-outlined' : '' %>
              <% moderator = moderator_ids.include?(tag.id) ? 'is-red is-outlined' : '' %>
              <%= link_to tag.name, tag_path(id: post.category_id, tag_id: tag.id),
                           class: "badge is-tag #{required} #{topic} #{moderator}",
                           title: tag.excerpt.present? ? tag.excerpt : "(no description yet)" %>
            <% end %>
          </div>
        <% end %>

        <div class="post--meta flex-row jc-sb">
          <div class="post-meta--post">
            <div title="<%= post.created_at.iso8601 %>">
              posted <%= time_ago_in_words(post.created_at) %> ago
            </div>

            <% if post.license.present? %>
              <div>
                <i class="fas fa-balance-scale" title="license" aria-label="license"></i>
                <%= link_to post.license.name, post.license.url %>
              </div>
            <% end %>

            <% if been_edited %>
              <div title="<%= post.last_edited_at.iso8601 %>">
                <i class="fa fa-pencil-alt" title="last edited" aria-label="last edited"></i>
                <%= time_ago_in_words(post.last_edited_at, locale: :en_abbrev) %> ago
                <% unless last_edited_by_self %>
                  by <%= user_link post.last_edited_by %>
                <% end %>
              </div>
            <% end %>
          </div>
          <div class="post-meta--user">
            <%= render 'users/post_usercard', post: post %>
          </div>
        </div>

        <div class="post--actions">
          <div class="tools">
            <%= link_to generic_share_link(post), class: 'tools--item js-permalink', role: 'button' do %>
              <i class="fa fa-link"></i>
              <span class="js-text">Permalink</span>
            <% end %>
            <%= link_to post_history_path(post), class: 'tools--item', 'aria-label': 'View history of this post' do %>
              <i class="fa fa-history"></i>
              History
            <% end %>
            <% if (post_type.is_public_editable && !post.locked?) || current_user&.is_moderator || post.user == current_user %>
              <% if check_your_post_privilege(post, 'edit_posts') %>
                <% if post.pending_suggested_edit? %>
                  <%= link_to suggested_edit_url(post.pending_suggested_edit.id), class: 'tools--item is-danger is-filled' do %>
                    <i class="fa fa-spell-check"></i>
                    Review suggested edit
                  <% end %>
                <% else %>
                  <%= link_to edit_post_path(post), class: 'tools--item', 'aria-label': 'Edit this post' do %>
                    <i class="fa fa-pencil-alt"></i>
                    Edit
                  <% end %>
                <% end %>
              <% elsif !current_user.nil? %>
                <% if post.pending_suggested_edit? %>
                  <span class="tools--item">suggested edit pending...</span>
                <% else %>
                  <%= link_to edit_post_path(post), class: 'tools--item', 'aria-label': 'Suggest edit to this post' do %>
                    <i class="fa fa-pencil-alt"></i>
                    Suggest edit
                  <% end %>
                <% end %>
              <% end %>
            <% end %>
            <% if user_signed_in? %>
              <a href="#" class="flag-dialog-link tools--item" role="button" aria-label="Flag this post">
                <i class="fa fa-flag"></i>
                Flag
              </a>
            <% end %>
            <% unless post.locked? || !post_type.is_closeable %>
              <% if check_your_privilege('flag_close') || (post.user_id === current_user&.id)%>
                <% if !post.closed %>
                  <a href="#" class="close-dialog-link tools--item" role="button" aria-label="Close this post">
                    <i class="fa fa-lock"></i>
                    Close
                  </a>
                <% elsif post.closed %>
                  <%= link_to reopen_post_path(post), method: :post, class: 'reopen-question tools--item', role: 'button', 'aria-label': 'Reopen this post' do %>
                    <i class="fa fa-unlock"></i>
                    Reopen
                  <% end %>
                <% end %>
              <% end %>
            <% end %>
            <% if check_your_post_privilege(post, 'flag_curate') %>
              <% unless post.locked? %>
                <% if !post.deleted %>
                  <%= link_to delete_post_path(post), method: :post,
                              data: { confirm: 'Are you sure you want to delete this post?' }, class: "tools--item is-danger",
                              role: 'button', 'aria-label': 'Delete this post' do %>
                    <i class="fa fa-trash"></i>
                    Delete
                  <% end %>
                <% else %>
                  <%= link_to restore_post_path(post), method: :post,
                              data: { confirm: 'Restore this post, making it visible to regular users?' }, class: "tools--item is-danger is-filled",
                              role: 'button', 'aria-label': 'Restore this post' do %>
                    <i class="fa fa-undo"></i>
                    Restore
                  <% end %>
                <% end %>
              <% end %>
            <% end %>
            <% if check_your_privilege('flag_curate') %>
              <a href="javascript:void(0);" data-modal="#mod-tools-<%= post.id %>" class="tools--item" role="button" aria-label="Open Moderator Tools">
                <i class="fa fa-wrench"></i>
                Tools
              </a>
              <% flags_count = if current_user&.is_moderator
                                 post.flags
                               else
                                 post.flags.not_confidential
                               end.where(handled_by_id: nil).count %>

              <% own_flags_count = if current_user&.is_moderator
                                     0
                                   else
                                     post.flags.not_confidential.where(user: current_user, handled_by_id: nil).count
                                   end %>

              <% if flags_count > 0 %>
                <a href="#" class="show-all-flags-dialog-link tools--item" role="button">
                  <i class="fa fa-exclamation-triangle"></i>
                  Show <%= pluralize(flags_count - own_flags_count, 'flag') %>
                </a>
              <% end %>
            <% end %>
          </div>
        </div>

        <div class="post--action-dialog js-flag-box">
          <div class="widget">
            <div class="widget--header">Why does this post require moderator attention?</div>
            <% unless post.locked? %>
              <% PostFlagType.where(post_type_id: post.post_type.id).or(PostFlagType.where(post_type_id: nil)).each do |reason| %>
                <div class="widget--body">
                  <div class="grid">
                    <div class="grid--cell">
                      <input class="form-radio-element" type="radio" name="flag-reason" value="<%= reason.id %>"
                             id="flag-reason-<%= reason.id %>_<%= post.id  %>" data-requires-details="<%= reason.requires_details %>"
                             data-response-type="<%= reason.name == "needs author's attention" ? 'comment' : nil %>" />
                    </div>
                    <div class="grid--cell is-flexible">
                      <label class="form-element has-margin-0" for="flag-reason-<%= reason.id %>_<%= post.id  %>">
                        <%= reason.name %>
                        <div class="form-caption">
                          <%= raw render_markdown(reason.description.gsub "$SiteName", SiteSetting['SiteName']) %>
                        </div>
                        <% if reason.name == "needs author's attention" %>
                          <div class="form-caption">
                            <em>This flag will be added as a comment to this post's feedback thread.</em>
                          </div>
                        <% elsif reason.name == 'is a duplicate' %>
                          <div class="form-caption">
                            <em>Please enter the URL of the proposed duplicate in the details field below.</em>
                          </div>
                        <% end %>
                      </label>
                    </div>
                  </div>
                </div>
              <% end %>
            <% end %>
              <div class="widget--body">
                <div class="grid">
                  <div class="grid--cell">
                    <input class="form-radio-element" type="radio" name="flag-reason" value="-1" id="flag-reason-other_<%= post.id  %>"
                           data-requires-details="true" />
                  </div>
                  <div class="grid--cell is-flexible">
                    <label class="form-element has-margin-0" for="flag-reason-other_<%= post.id  %>">
                      other reason
                      <span class="form-caption">
                        Please elaborate in the details field below.
                      </span>
                    </label>
                  </div>
                </div>
              </div>
            <div class="widget--body">
              <label class="form-element" for="flag-post-<%= post.id %>">
                Details?
              </label>
              <div class="form-caption">You might want to add some details to your flag.</div>
              <input class="form-element js-flag-comment" id="flag-post-<%= post.id %>">
            </div>
            <div class="widget--footer">
              <button class="flag-link button is-filled is-muted" data-post-type="<%= is_question ? 'Question' : 'Answer' %>" data-post-id="<%= post.id %>">
                Flag for moderator attention
              </button>
            </div>
          </div>
        </div>

        <% if post_type.is_closeable %>
          <div class="post--action-dialog js-close-box">
            <div class="widget">
              <div class="widget--header">Why should this post be closed?</div>
              <% CloseReason.active.each do |reason| %>
                <div class="widget--body">
                  <div class="grid">
                    <div class="grid--cell">
                      <input class="form-radio-element" type="radio" name="close-reason" value="<%= reason.id %>"
                             id="close-reason-<%= reason.id %>" data-rop="<%= reason.requires_other_post %>">
                    </div>
                    <div class="grid--cell is-flexible">
                      <label class="form-element" for="close-reason-<%= reason.id %>">
                        <%= reason.name %>
                        <div class="form-caption">
                          <%= raw render_markdown(reason.description.gsub "$SiteName", SiteSetting['SiteName']) %>
                        </div>
                      </label>
                      <% if reason.requires_other_post %>
                        <input required class="form-element has-margin-top-8 js-close-other-post"
                               id="close-reason-other-post-<%= reason.id %>"
                               placeholder="Please enter the URL or ID of the other post in this community."
                               name="close-reason-other-post" />
                      <% end %>
                    </div>
                  </div>
                </div>
              <% end %>
              <div class="widget--footer">
                <button class="js-close-question button is-filled is-muted" data-post-id="<%= post.id %>">
                  Close this post
                </button>
              </div>
            </div>
          </div>
        <% end %>

        <% if current_user&.privilege?('flag_curate') %>
          <div class="post--action-dialog js-flags">
            <div class="widget">
              <div class="widget--header">Flags on this post</div>
              <% post.flags.where(handled_by_id: nil).each do |flag| %>
                <% next if !current_user.is_moderator && (flag.post_flag_type.nil? || flag.post_flag_type.confidential) %>
                <% next if !current_user.is_moderator && (current_user.id == flag.user.id) %>
                <div class="widget--body">
                  <div>
                  <p>
                    <strong><%= flag.post_flag_type&.name || 'Flag reason' %>:</strong> <%= flag.reason %> &mdash;
                    <%= user_link flag.user %>
                  </p>
                  <input class="form-element flag-resolve-comment has-float-left" style="max-width: 300px;" placeholder="Optional comment for flagger">
                  <div class="has-float-right has-padding-1">
                    <a href="#" class="flag-resolve button" data-result='helpful' data-flag-id="<%= flag.id %>">Helpful</a>
                    <a href="#" class="flag-resolve button" data-result='declined' data-flag-id="<%= flag.id %>">Decline</a>
                  </div>
                  <div class="has-clear-clear"></div>
                  </div>
               </div>
              <% end %>
            </div>
          </div>
        <% end %>

        <% if is_top_level && post.children.length >= SiteSetting["TableOfContentsThreshold"] && SiteSetting["TableOfContentsThreshold"] != -1 %>
          <div class="toc has-margin-left-4" id="toc-toggle">
            <button class="toc--header" data-toggle="#toc-toggle" data-toggle-property="class" data-toggle-value="is-active">Table of Contents</button>
            <% sorted_answers = post.children.sort_by { |answer| answer.score }.reverse! %>
            <% sorted_answers.each do |answer| %>
              <% next if answer.deleted? && !moderator? %>
              <%= render 'posts/toc_entry', answer: answer %>
            <% end %>
          </div>
        <% end %>

        <div class="post--status">
          <% if post.att_source.present? %>
            <div class="notice has-margin-2">
              <p>
                This post was sourced from <%= link_to post.att_source, post.att_source %>.
                <% if post.att_license_name.present? %>
                  It is licensed under <%= link_to post.att_license_name, post.att_license_link %>.
                <% end %>
              </p>
            </div>
          <% end %>
        </div>
        <div class="post--comments has-padding-4">
          <% comment_threads = post.comment_threads.initially_visible.order(updated_at: :desc) %>
          <% public_count = comment_threads.count %>
          <% available_count = current_user&.has_post_privilege?('flag_curate', post) ?
                                 post.comment_threads.count : post.comment_threads.publicly_available.count %>
          <h4 class="has-margin-0">
            <%= pluralize(public_count, 'comment thread') %>
          </h4>
          <% if user_signed_in? %>
            <a class="button is-outlined is-small js-new-thread-link" data-post="<%= post.id %>" role="button">
              <i class="fas fa-fw fa-plus"></i> Start new comment thread
            </a>
            <% if CommentThread.post_followed?(post, current_user) %>
              <%= link_to follow_post_comments_path(post_id: post.id), method: :post,
                          class: "button is-muted is-outlined is-small",
                          title: 'Don\'t follow new comment threads on this post',
                          role: 'button',
                          'aria-label': 'Unfollow new comment threads on this post' do %>
                  <i class="fas fa-fw fa-bell-slash"></i> Unfollow new
              <% end %>
            <% else %>
              <%= link_to follow_post_comments_path(post_id: post.id), method: :post,
                          class: "button is-muted is-outlined is-small",
                          title: 'Follow all new comment threads on this post',
                          role: 'button',
                          'aria-label': 'Follow all new comment threads on this post' do %>
                <i class="fas fa-fw fa-bell"></i> Follow new
              <% end %>
            <% end %>
          <% end %>
          <div class="post--comments-container" role="list">
            <%= render 'comments/post', comment_threads: comment_threads.first(5) %>
          </div>
          <div class="post--comments-links has-margin-top-1">
            <% if available_count > [comment_threads.count, 5].min %>
              <a href="#" class="js-more-comments button is-muted is-small" data-post-id="<%= post.id %>" role="button" aria-label="Show more comment threads">
                Show more
              </a>
            <% end %>
            <% if user_signed_in? %>
              <% if post.locked? && !moderator? && !admin? %>
                <p class="has-color-tertiary-500">Comments are disabled on locked posts.</p>
              <% elsif post.deleted %>
                <p class="has-color-tertiary-500">Comments are disabled on deleted posts.</p>
              <% elsif post.comments_disabled && !moderator? && !admin? %>
                <p class="has-color-red-500"><i class="fa fa-lock"></i> Comments have been disabled on this post.</p>
              <% else %>
                <% if post.locked? %>
                  <p class="has-color-red-500"><i class="fa fa-lock"></i> Comments are disabled on locked posts, but as a moderator you are exempt from that block.</p>
                <% elsif post.comments_disabled %>
                  <p class="has-color-red-500"><i class="fa fa-lock"></i> Comments have been disabled on this post, but as a moderator you are exempt from that block.</p>
                <% end %>
              <% end %>
                <%= render 'comments/new_thread_modal', post: post %>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<% if moderator? || current_user&.has_post_privilege?('flag_curate', post) %>
  <%= render 'posts/post_tools', post: post %>
<% end %>

<% if post.post_type.has_reactions && !post.locked? && user_signed_in? %>
  <%= render 'reactions/dialog', post: post %>
<% end %>
